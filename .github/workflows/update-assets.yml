name: Update Web Assets with Backup (with AWK)

on:
  workflow_dispatch:
    inputs:
      link1:
        description: "Nowy URL dla przycisku next-description"
        required: false
      link2:
        description: "Nowy URL dla przycisku next-but"
        required: false
      link3:
        description: "Nowy URL dla przycisku prev"
        required: false
      image1_url:
        description: "URL nowego obrazka (banner_next.png)"
        required: false
      image2_url:
        description: "URL nowego obrazka (banner_previous.png)"
        required: false

permissions:
  contents: write

jobs:
  update-site:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Backup current images (if needed)
        if: ${{ github.event.inputs.image1_url != '' || github.event.inputs.image2_url != '' }}
        run: |
          TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')
          mkdir -p images/history

          if [ -f images/banner_next.png ] && [ "${{ github.event.inputs.image1_url }}" != "" ]; then
            cp images/banner_next.png images/history/banner_next_$TIMESTAMP.png
          fi

          if [ -f images/banner_previous.png ] && [ "${{ github.event.inputs.image2_url }}" != "" ]; then
            cp images/banner_previous.png images/history/banner_previous_$TIMESTAMP.png
          fi

      - name: Download new image1 (banner_next.png)
        if: ${{ github.event.inputs.image1_url != '' }}
        run: |
          curl -L "${{ github.event.inputs.image1_url }}" -o images/banner_next.png

      - name: Download new image2 (banner_previous.png)
        if: ${{ github.event.inputs.image2_url != '' }}
        run: |
          curl -L "${{ github.event.inputs.image2_url }}" -o images/banner_previous.png

      - name: Update links in HTML (using awk)
        run: |
          cp index.html index_tmp.html

          if [ "${{ github.event.inputs.link1 }}" != "" ]; then
            awk 'BEGIN{RS="</a>"; ORS="</a>\n"} /class="[^"]*meeting-btn[^"]*meeting-btn-next-description[^"]*"/ {sub(/href="[^"]*"/, "href=\"${{ github.event.inputs.link1 }}\"")} {print}' index_tmp.html > index.html
            cp index.html index_tmp.html
          fi

          if [ "${{ github.event.inputs.link2 }}" != "" ]; then
            awk 'BEGIN{RS="</a>"; ORS="</a>\n"} /class="[^"]*meeting-btn[^"]*meeting-btn-next-but[^"]*"/ {sub(/href="[^"]*"/, "href=\"${{ github.event.inputs.link2 }}\"")} {print}' index_tmp.html > index.html
            cp index.html index_tmp.html
          fi

          if [ "${{ github.event.inputs.link3 }}" != "" ]; then
            awk 'BEGIN{RS="</a>"; ORS="</a>\n"} /class="[^"]*meeting-btn[^"]*meeting-btn-prev[^"]*"/ {sub(/href="[^"]*"/, "href=\"${{ github.event.inputs.link3 }}\"")} {print}' index_tmp.html > index.html
          fi

          rm -f index_tmp.html

      - name: üîç Show index.html after awk
        run: |
          echo "=== index.html after awk ==="
          cat index.html

      - name: üîç Show Git status & diff
        run: |
          echo "=== git status ==="
          git status
          echo "=== git diff ==="
          git diff index.html

      - name: Commit and push changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add index.html images/banner_*.png images/history || true
          git diff --cached --quiet || (git commit -m "Aktualizacja strony (wybrane zmiany)" && git push)
